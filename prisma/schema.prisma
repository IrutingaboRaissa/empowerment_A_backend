generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        String   @id @default(uuid())
  title     String
  content   String
  authorId  String
  author    User     @relation(fields: [authorId], references: [id])
  category  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  likes     Like[]
  comments  Comment[]
}

model User {
  id            String   @id @default(uuid())
  email         String   @unique
  password      String
  phoneNumber   String?  
  address       String?  
  bio           String?  
  displayName   String
  age           Int
  category      String
  parentConsent Boolean
  avatar        String?  
  tokens        String[] // Store multiple tokens as an array
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  posts         Post[]
  comments      Comment[]
  likes         Like[]
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  authorId  String
  author    User     @relation(fields: [authorId], references: [id])
  postId    String
  post      Post     @relation(fields: [postId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  likes     Like[]
}

model Like {
  id        String   @id @default(uuid())
  userId    String
  postId    String?  // Nullable because a like can be for a comment instead
  commentId String?  // Nullable because a like can be for a post instead
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User     @relation(fields: [userId], references: [id])
  post      Post?    @relation(fields: [postId], references: [id])
  comment   Comment? @relation(fields: [commentId], references: [id])
}
